@page "/gridperson"
@rendermode InteractiveServer
@using Blazor9CoreuiBlazorbootstrap.Models;

@code {
    private List<DemoPerson> demoPersonSet = default!;

    private HashSet<DemoPerson> selectedPeople = new();

    private async Task<GridDataProviderResult<DemoPerson>> EmployeesDataProvider(GridDataProviderRequest<DemoPerson> request)
    {
        if (demoPersonSet is null) // pull demoPersonSet only one time for client-side filtering, sorting, and paging
            demoPersonSet = DemoPerson.SampleSet(); // call a service or an API to pull the demoPersonSet

        return await Task.FromResult(request.ApplyTo(demoPersonSet));
    }


    private Task OnSelectedItemsChanged(HashSet<DemoPerson> demoPersonSet)
    {
        selectedPeople = demoPersonSet is not null && demoPersonSet.Any() ? demoPersonSet : new();
        return Task.CompletedTask;
    }
}


<PageTitle>Grid Person</PageTitle>

<div class="card mb-4">
    <div class="card-header">Grid - Blazor Bootstrap</div>
    <div class="card-body">

        <div>
            Selected Items Count: @selectedPeople.Count
        </div>

        <div class="mt-2">
            Selected Employees:
            <ul>
                @foreach (var emp in selectedPeople)
                {
                    <li>@emp.Name</li>
                }
            </ul>
        </div>
        <hr class="mb-5" />

        <h1>Grid Person</h1>
        <Grid TItem="DemoPerson"
              Class="table table-hover table-bordered table-striped"
              DataProvider="EmployeesDataProvider"
              AllowFiltering="true"
              AllowPaging="true"
              PageSize="10"
              AllowSorting="true"
              AllowSelection="true"
              SelectionMode="GridSelectionMode.Multiple"
              SelectedItemsChanged="OnSelectedItemsChanged"
              Responsive="true">

            <GridColumns>
                <GridColumn TItem="DemoPerson" HeaderText="Id" PropertyName="Id" SortKeySelector="item => item.Id" Filterable="false" Class="width-id">
                    @context.Id
                </GridColumn>
                <GridColumn TItem="DemoPerson" HeaderText="Employee Name" PropertyName="Name" SortKeySelector="item => item.Name">
                    @context.Name
                </GridColumn>
                <GridColumn TItem="DemoPerson" HeaderText="Year of Birth" PropertyName="BirthYear" SortKeySelector="item => item.BirthYear">
                    @context.BirthYear
                </GridColumn>

            </GridColumns>

        </Grid>

        

    </div> <!-- <div class="card-body"> -->
</div> <!-- <div class="card mb-4"> -->

